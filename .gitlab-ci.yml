# Spécifier l'image de base pour les jobs
image: docker:latest

# Définition des variables d'environnement
variables:
  SSH_PRIVATE_KEY: "$SSH_PRIVATE_KEY"
  SSH_KNOWN_HOSTS: "$SSH_KNOWN_HOSTS"
  SSH_USER: "$SSH_USER"
  SSH_HOST: "$SSH_HOST"
  SSH_PORT: "$SSH_PORT"
  DOCKER_IMAGE_NAME: "$DOCKER_IMAGE_NAME"
  CONTAINER_NAME: "$CONTAINER_NAME"
  CONTAINER_PORT: "$CONTAINER_PORT"

# Jobs de la pipeline
stages:
  - deploy

deploy:
  stage: deploy
  script:
    # Configuration de la connexion SSH
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

    # Connexion au serveur distant via SSH
    - ssh -p "$SSH_PORT" "$SSH_USER"@"$SSH_HOST" "echo Connected"

    # Arrêt et suppression du conteneur Docker existant (si présent)
    - ssh -p "$SSH_PORT" "$SSH_USER"@"$SSH_HOST" "docker stop $CONTAINER_NAME || true"
    - ssh -p "$SSH_PORT" "$SSH_USER"@"$SSH_HOST" "docker rm $CONTAINER_NAME || true"

    # Téléchargement de la dernière version de l'image Docker depuis le registry
    - docker pull "$DOCKER_IMAGE_NAME"

    # Lancement du nouveau conteneur Docker
    - ssh -p "$SSH_PORT" "$SSH_USER"@"$SSH_HOST" "docker run -d --name $CONTAINER_NAME -p $CONTAINER_PORT:$CONTAINER_PORT $DOCKER_IMAGE_NAME"

    # Redémarrage du conteneur Docker
    - ssh -p "$SSH_PORT" "$SSH_USER"@"$SSH_HOST" "docker restart $CONTAINER_NAME"
    
  when: manual